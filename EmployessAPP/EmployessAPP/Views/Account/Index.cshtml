@*@model IEnumerable<EmployessAPP.Models.UserAccount>*@
@model PagedList.IPagedList<EmployessAPP.Models.UserAccount>
@using EmployessAPP.Controllers
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
}

<h2>Users data</h2>

<p>
   
    @Html.ActionLink("Create New User", "Create")
   
</p>
@using (Html.BeginForm("Index", "Account", FormMethod.Get))
{
    <p>
        @* Creates search bar *@
        Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search"/>

    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new {sortOrder = ViewBag.FirstNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UserNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Password", "Index")
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sortOrder = ViewBag.RoleNameSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.UserID}) |
                @Html.ActionLink("Details", "Details", new {id = item.UserID}) |
                @Html.ActionLink("Delete", "Delete", new {id = item.UserID})
            </td>
       
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
